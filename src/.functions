
# Make and cd into a directory
mk() {
  mkdir -p "$@" && cd "$@"
}

# Change into directory and list contents
cl() {
  cd "$@" && \
    ls --human-readable --color --size -1 -S --classify
}

# Generic extract function for majority of archives
extract() {
  if [ -z "$1" ]; then
    # display usage if no parameters given
    echo "Usage: extract <path/file_name>.<zip|rar|bz2|gz|tar|tbz2|tgz|Z|7z|xz|ex|tar.bz2|tar.gz|tar.xz>"
    echo "       extract <path/file_name_1.ext> [path/file_name_2.ext] [path/file_name_3.ext]"
    return 1
  else
    for n in $@
    do
      if [ -f "$n" ] ; then
          case "${n%,}" in
            *.tar.bz2|*.tar.gz|*.tar.xz|*.tbz2|*.tgz|*.txz|*.tar)
                         tar xvf "$n"       ;;
            *.lzma)      unlzma ./"$n"      ;;
            *.bz2)       bunzip2 ./"$n"     ;;
            *.rar)       unrar x -ad ./"$n" ;;
            *.gz)        gunzip ./"$n"      ;;
            *.zip)       unzip ./"$n"       ;;
            *.z)         uncompress ./"$n"  ;;
            *.7z|*.arj|*.cab|*.chm|*.deb|*.dmg|*.iso|*.lzh|*.msi|*.rpm|*.udf|*.wim|*.xar)
                         7z x ./"$n"        ;;
            *.xz)        unxz ./"$n"        ;;
            *.exe)       cabextract ./"$n"  ;;
            *)
                         echo "extract: '$n' - unknown archive method"
                         return 1
                         ;;
          esac
      else
          echo "'$n' - file does not exist"
          return 1
      fi
    done
fi
}

# Encrypt sensitive dotfiles
endot() {
  cd ~/.dotfiles
  tar -cz sensitive | gpg -er 8E15A7165B24ED72 -o encrypted.tar.gz.gpg
}

# Decrypt sensitive dotfiles
dedot() {
  cd ~/.dotfiles
  gpg -d encrypted.tar.gz.gpg | tar xz
}

# Version control specified dotfile
dot() {
  if [ -z "$1" ]; then
    echo "Usage: dot DOTFILES..."
    echo "Version control specified DOTFILE(S), preserving directory structure."
    return 1
  fi
  for file in $@; do
    filename=$(readlink -f ${file})
    destination=${HOME}/.dotfiles/src${filename#"${HOME}"}
    mkdir -p $(dirname ${destination}) > /dev/null
    echo "Moving ${filename} to ${destination}"
    mv "${filename}" "${destination}"
    echo "Creating symbolic link to new location."
    ln -sfv "${destination}" "${filename}"
  done
}

# Update dotfiles. Pull the latest dotfiles from git, update links, source .bashrc.
updot() {
  cd ~/.dotfiles
  git pull
  ./install -l
  source ~/.bashrc
}
